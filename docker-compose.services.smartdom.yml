version: "3"
networks:
    proxy:
      external:
        name: smart_proxy
    db-net:
      external:
        name: smart_smartdom-db-net
    meet.jitsi:

services:
    db:
        image: postgres:11
        environment:
          - POSTGRES_PASSWORD=odoo
          - POSTGRES_USER=odoo
          - POSTGRES_DB=postgres
        restart: always             # run as a service
        volumes:
          - ./Smartdom/Micro/odoo/db:/var/lib/postgresql/data
        networks:
          - db-net

    odoo13:
        image: odoo:13
        depends_on:
          - db
        expose:
          - 8069
        tty: true
        command: -- --dev=reload
        volumes:
          - ./Smartdom/Micro/odoo/web/data:/var/lib/odoo
          - ./Smartdom/Micro/odoo/web/config:/etc/odoo
          - ./Smartdom/Micro/odoo/web/addons:/mnt/extra-addons
        networks:
          - proxy
          - db-net
        restart: always
        environment:
            TZ: Europe/Prague
            HTTPS: 'OFF'
            VIRTUAL_HOST: odoo.${SMARTDOM_DOMAIN}
            VIRTUAL_PORT: 8069
            LETSENCRYPT_HOST: odoo.${SMARTDOM_DOMAIN}
            LETSENCRYPT_EMAIL: ${SMARTDOM_EMAIL}

    web:
        image: jitsi/web
        restart: unless-stopped
        expose:
            - 80
            - 443
        volumes:
            - ./Smartdom/Micro/jitsi/web:/config
            - ./Smartdom/Micro/jitsi/web/letsencrypt:/etc/letsencrypt
            - ./Smartdom/Micro/jitsi/transcripts:/usr/share/jitsi-meet/transcripts
        environment:
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - ENABLE_LETSENCRYPT
            - ENABLE_HTTP_REDIRECT
            - ENABLE_TRANSCRIPTIONS
            - DISABLE_HTTPS
            - JICOFO_AUTH_USER
            - PUBLIC_URL
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_BOSH_URL_BASE
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_RECORDER_DOMAIN
            - ETHERPAD_URL_BASE
            - TZ
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - JIBRI_XMPP_USER
            - JIBRI_XMPP_PASSWORD
            - JIBRI_RECORDER_USER
            - JIBRI_RECORDER_PASSWORD
            - ENABLE_RECORDING
            - VIRTUAL_HOST=meet.${SMARTDOM_DOMAIN}
            - VIRTUAL_PORT=80
            - LETSENCRYPT_HOST=meet.${SMARTDOM_DOMAIN}
            - LETSENCRYPT_EMAIL=${SMARTDOM_EMAIL}
        networks:
            - proxy
            - ${XMPP_DOMAIN}

    prosody:
        image: jitsi/prosody
        restart: unless-stopped
        expose:
            - 5222
            - 5347
            - 5280
        volumes:
            - ./Smartdom/Micro/jitsi/prosody:/config
        environment:
            - AUTH_TYPE
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - GLOBAL_MODULES
            - GLOBAL_CONFIG
            - LDAP_URL
            - LDAP_BASE
            - LDAP_BINDDN
            - LDAP_BINDPW
            - LDAP_FILTER
            - LDAP_AUTH_METHOD
            - LDAP_VERSION
            - LDAP_USE_TLS
            - LDAP_TLS_CIPHERS
            - LDAP_TLS_CHECK_PEER
            - LDAP_TLS_CACERT_FILE
            - LDAP_TLS_CACERT_DIR
            - LDAP_START_TLS
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_MODULES
            - XMPP_MUC_MODULES
            - XMPP_INTERNAL_MUC_MODULES
            - XMPP_RECORDER_DOMAIN
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JIGASI_XMPP_USER
            - JIGASI_XMPP_PASSWORD
            - JIBRI_XMPP_USER
            - JIBRI_XMPP_PASSWORD
            - JIBRI_RECORDER_USER
            - JIBRI_RECORDER_PASSWORD
            - JWT_APP_ID
            - JWT_APP_SECRET
            - JWT_ACCEPTED_ISSUERS
            - JWT_ACCEPTED_AUDIENCES
            - JWT_ASAP_KEYSERVER
            - JWT_ALLOW_EMPTY
            - JWT_AUTH_TYPE
            - JWT_TOKEN_AUTH_MODULE
            - LOG_LEVEL
            - TZ
        networks:
            meet.jitsi:
                aliases:
                    - ${XMPP_SERVER}

    jicofo:
        image: jitsi/jicofo
        restart: unless-stopped
        volumes:
            - ./Smartdom/Micro/jitsi/jicofo:/config
        environment:
            - ENABLE_AUTH
            - XMPP_DOMAIN
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JICOFO_COMPONENT_SECRET
            - JICOFO_AUTH_USER
            - JICOFO_AUTH_PASSWORD
            - JICOFO_RESERVATION_REST_BASE_URL
            - JVB_BREWERY_MUC
            - JIGASI_BREWERY_MUC
            - JIGASI_SIP_URI
            - JIBRI_BREWERY_MUC
            - JIBRI_PENDING_TIMEOUT
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:


    jvb:
        image: jitsi/jvb
        restart: unless-stopped
        ports:
            - '${JVB_PORT}:${JVB_PORT}/udp'
            - '${JVB_TCP_PORT}:${JVB_TCP_PORT}'
        volumes:
            - ./Smartdom/Micro/jitsi/jvb:/config
        environment:
            - DOCKER_HOST_ADDRESS
            - XMPP_AUTH_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - JVB_AUTH_USER
            - JVB_AUTH_PASSWORD
            - JVB_BREWERY_MUC
            - JVB_PORT
            - JVB_TCP_HARVESTER_DISABLED
            - JVB_TCP_PORT
            - JVB_STUN_SERVERS
            - JVB_ENABLE_APIS
            - TZ
        depends_on:
            - prosody
        networks:
            meet.jitsi:

    posteio:
        image: analogic/poste.io
        ports:
            - 0.0.0.0:25:25
            - 110:110
            - 143:143
            - 465:465
            - 587:587
            - 993:993
            - 995:995
            - 4190:4190
        expose:
            - 80
        volumes:
            - ./Smartdom/Micro/posteio:/data
        hostname: mail
        domainname: smartdom.ch
        environment:
            TZ: Europe/Prague
            HTTPS: 'OFF'
            VIRTUAL_HOST: mail.${SMARTDOM_DOMAIN}
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: mail.${SMARTDOM_DOMAIN}
            LETSENCRYPT_EMAIL: ${SMARTDOM_EMAIL}
        networks:
            - proxy

    rocketchat:
        image: rocket.chat:latest
        command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo "Tried $$i times. Waiting 5 secs..."; sleep 5; done; (exit $$s)'
        restart: unless-stopped
        volumes:
            - ./Smartdom/Micro/rocket/uploads:/app/uploads
        networks:
            - db-net
            - proxy
        environment:
            VIRTUAL_HOST: rocket.${SMARTDOM_DOMAIN}
            VIRTUAL_PORT: 3000
            LETSENCRYPT_HOST: rocket.${SMARTDOM_DOMAIN}
            LETSENCRYPT_EMAIL: ${SMARTDOM_EMAIL}
            PORT: 3000
            ROOT_URL: http://chat.inumio.com
            MONGO_URL: mongodb://mongo:27017/rocketchat
            MONGO_OPLOG_URL: mongodb://mongo:27017/local
            Accounts_UseDNSDomainCheck: 'False'
        depends_on:
            - mongo
        ports:
            - 3000:3000

    mongo:
        image: mongo:4.0
        restart: unless-stopped
        networks:
            - db-net
        volumes:
            - ./Smartdom/Micro/rocket/data/db:/data/db
            - ./Smartdom/Micro/rocket/data/dump:/dump
        command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

    mongo-init-replica:
        image: mongo
        command: 'bash -c "for i in `seq 1 30`; do mongo mongo/rocketchat --eval \"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\" && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)"'
        networks:
            - db-net
        depends_on:
            - mongo
